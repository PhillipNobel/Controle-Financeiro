# HTTP to HTTPS redirect
server {
    listen 80;
    server_name staging.controle-financeiro.com www.staging.controle-financeiro.com;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri $uri/ =404;
    }
    
    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server configuration
server {
    listen 443 ssl http2;
    server_name staging.controle-financeiro.com www.staging.controle-financeiro.com;
    root /var/www/html/public;
    index index.php index.html;

    # SSL Configuration (Let's Encrypt or manual certificates)
    ssl_certificate /etc/letsencrypt/live/staging.controle-financeiro.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/staging.controle-financeiro.com/privkey.pem;
    
    # Fallback to manual certificates if Let's Encrypt is not available
    # ssl_certificate /etc/ssl/certs/staging.controle-financeiro.com.crt;
    # ssl_certificate_key /etc/ssl/certs/staging.controle-financeiro.com.key;
    
    # SSL Security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;

    # Rate limiting
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }

    location /login {
        limit_req zone=login burst=5 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Laravel specific locations
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP-FPM configuration with enhanced monitoring
    location ~ \.php$ {
        fastcgi_pass app:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Security
        fastcgi_hide_header X-Powered-By;
        
        # Timeouts and buffers
        fastcgi_read_timeout 300;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        
        # Additional headers for monitoring
        fastcgi_param HTTP_X_FORWARDED_PROTO $scheme;
        fastcgi_param HTTP_X_FORWARDED_FOR $proxy_add_x_forwarded_for;
        fastcgi_param HTTP_X_REAL_IP $remote_addr;
    }

    # Static files caching with versioning support
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # CORS for staging
        add_header Access-Control-Allow-Origin "https://staging.controle-financeiro.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, X-XSRF-Token" always;
    }

    # Handle OPTIONS method for CORS preflight
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin "https://staging.controle-financeiro.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, X-XSRF-Token" always;
        add_header Access-Control-Max-Age 86400;
        return 204;
    }

    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ /(storage|bootstrap/cache|\.env) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Health check endpoint with detailed status
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
        add_header X-Health-Check "nginx-ok";
    }

    # Enhanced health check for application
    location /health/detailed {
        fastcgi_pass app:9000;
        fastcgi_param SCRIPT_FILENAME $document_root/index.php;
        fastcgi_param SCRIPT_NAME /index.php;
        fastcgi_param REQUEST_URI /health/detailed;
        include fastcgi_params;
        access_log off;
    }

    # PHP-FPM status endpoints
    location ~ ^/(ping|status)$ {
        fastcgi_pass app:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        access_log off;
        allow 172.20.0.0/16;  # Docker network
        allow 127.0.0.1;
        deny all;
    }

    # Nginx status for monitoring
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 172.20.0.0/16;  # Docker network
        allow 127.0.0.1;
        deny all;
    }

    # Log format for this server
    access_log /var/log/nginx/staging-access.log json_combined;
    error_log /var/log/nginx/staging-error.log warn;
}