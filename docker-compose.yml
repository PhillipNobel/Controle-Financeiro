version: '3.8'

services:
  # Application (PHP-FPM)
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: controle-financeiro-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/99-custom.ini
      - ./docker/php/php-fpm.conf:/usr/local/etc/php-fpm.d/www.conf
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_HOST=mysql
      - DB_DATABASE=controle_financeiro
      - DB_USERNAME=root
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - controle-financeiro-network
    healthcheck:
      test: ["CMD", "php", "artisan", "tinker", "--execute=echo 'OK';"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Web Server (NGINX)
  nginx:
    image: nginx:alpine
    container_name: controle-financeiro-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - controle-financeiro-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database (MySQL)
  mysql:
    image: mysql:8.0
    container_name: controle-financeiro-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: controle_financeiro
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "3306:3306"
    networks:
      - controle-financeiro-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-psecret"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Cache & Queue (Redis)
  redis:
    image: redis:7-alpine
    container_name: controle-financeiro-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass secret
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - controle-financeiro-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "secret", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: controle-financeiro-queue
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    environment:
      - APP_ENV=local
      - DB_HOST=mysql
      - DB_DATABASE=controle_financeiro
      - DB_USERNAME=root
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
      - REDIS_PASSWORD=secret
      - QUEUE_CONNECTION=redis
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - controle-financeiro-network

  # Scheduler (Cron)
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: controle-financeiro-scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    environment:
      - APP_ENV=local
      - DB_HOST=mysql
      - DB_DATABASE=controle_financeiro
      - DB_USERNAME=root
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
      - REDIS_PASSWORD=secret
    command: sh -c "while true; do php artisan schedule:run; sleep 60; done"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - controle-financeiro-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  controle-financeiro-network:
    driver: bridge